
#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#
#-----------------------GR?FICOS DE CONTROL---------------------------------------------#
#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#

# En esta pr?ctica se obtendr?n gr?ficos de control para variables y 
# atributos utilizando dos paquetes: "qcc" y "qcr".

# Para trabajar con casi todas las funciones y aplicaciones que existen dentro de este 
# paquete estad?stico, debemos crear un objeto qcc.

# Necesitamos b?sicamente dos cosas:
# Unos datos (un data frame, una matriz, un vector,..) y un "string value" especificando 
# el tipo de control que deseamos hacer (por Atributos o por variables).

# Tambi?n, opcionalmente, se pueden modificar el tama?o (sizes), el centro del grupo 
# (center), la desviaci?n est?ndar (std.dev), los limites de control (limits), el valor 
# objetivo del proceso(target).

#La ?nica diferencia que existe a la hora de trabajar con variables o con atributos, 
#radica en "type". Para variables podemos optar por elegir entre "xbar","xbar.one", "R" 
# o "S" y para atributos tenemos "p", "np","c","u" o "g".

#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#
# 1. Gr?ficos qcc para variables:  -----------------------------------------------------#
#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#

# Vamos a trabajar con dos bases de datos:
# a. "plates", definida en el paquete qcr.
#       Medidas de dureza de planchas de piedra artificial.
# b. "pistonrings", definida en el paquete qcc.
#      Estos datos est?n sacados del libro de MONTGOMERY .Son medidas del di?metro interior 
#      de anillos forjados para los pistones que se usan en los motores de los coches.
#      Las variables que aparecen en el estudio son:
       # diameter, es el di?metro de los pistones
       # sample=1,2,3,...40 representa el n?mero de la muestra y de cada muestra tenemos 5 
       # observaciones.
       # Trial, es la prueba realizada (T-F)

#---------------------------------------------------------------------------------------#
# Para cargar los datos pistongrings:

library(qcc)
data(pistonrings) # Se carga la base de datos
pistonrings
attach(pistonrings) # Se toman las columnas de la base de datos como variables
dim(pistonrings) # 200 datos, 3 variables

# Creacion del objeto qcc.groups o grupos qcc:
diameter <- qcc.groups(diameter, sample)

# Se agrupan los valores de los di?metros seg?n el valor de la columna "Sample"
# Como hay 200 valores en 40 muestras, el resultado es una matriz 40x5 (200/5=40)

diameter
dim(diameter)
#efectivamente es una matriz de 40 filas y 5 columnas

#---------------------------------------------------------------------------------------#
# Para cargar los datos "plates" hay dos alternativas:

# Import?ndolo a R a partir del archivo Ejercicio1.r

Ejercicio1=read.table("Ejercicio1.r",header=TRUE)
names(Ejercicio1)
dim(Ejercicio1)

# Acto seguido se define el objeto qcc.groups:
Dureza <- qcc.groups(Ejercicio1$dureza, Ejercicio1$sample)

# O carg?ndolo desde el paquete qcr (que ya lleva incorporado el dataframe)

library(qcr)
data(plates)
str(plates) # Variables de las que se compone plates

# dureza: vector num?rico, dureza de las planchas.
# sample: identificador de la muestra, 1,2,3,...50 

#---------------------------------------------------------------------------------------#
# CASO PR?CTICO a resolver con la base de datos "plates":

# Una conocida empresa qu?mica est? desarrollando la patente de una 
# nueva variante de piedra artificial, compuesta en su mayor parte 
# por cuarzo (93 wt%) y resina de poli?ster. Esta compa??a pone en 
# marcha una planta piloto donde se comienzan a producir planchas 
# de este material a escala industrial. Con el fin de medir el grado 
# de homogeneidad del producto, se toman 50 submuestras, realiz?ndose
# 5 medidas por plancha de la dureza Vickers correspondiente a 
# distintas zonas de la piedra artificial (Ejercicio1.r). 
# ?Qu? tipo de gr?ficos de control ser?an los m?s adecuados 
# para controlar el nivel y la dispersi?n? Hallar los l?mites de 
# control natural 3?? con una muestra de calibrado y, seguidamente, 
# monitorizar las muestras restantes. Comentar los resultados, 
# identificar patrones e identificar sus posibles causas.

#---------------------------------------------------------------------------------------#
# 1.1. Gr?fico de control para el RANGO y la MEDIA: datos "plates" 
#---------------------------------------------------------------------------------------#


# IMPORTANTE. Para construir un gr?fico de control de la media, primero hay que observar 
# los diagramas de rangos o desviaciones tipicas (antes que los diagramas de la media).
# Es debido a que los rangos o desviaciones tipicas estimados se emplean luego para 
# calcular los UCL y LCL en el gr?fico de control de la media. Estimacion de 
# sigma="Rango medio"/d2 o "S media"/c4

#---------------------------------------------------------------------------------------#
# 1.1.1. Librer?a qcc:
# Procedimiento est?ndar para la construcci?n de gr?ficos
# de control para el rango y la media: etapas I y II
#---------------------------------------------------------------------------------------#

# Se estiman los l?mites naturales del gr?fico de control.
# Primero se estima la variabilidad del proceso con el
# gr?fico de rangos. Se sigue el siguiente proceso:

# Gr?fico con 4 paneles

windows(15,10)
op<-par(mfrow=c(2,2))

# Se estiman los l?mites naturales de control del gr?fico 
# de rangos mediante las 25 primeras muestras:

qcc(Dureza[1:25,],type="R",nsigmas=3,restore.par=FALSE)  # type indica gr?fico de rangos, R-para variables

# Se ha creado un objeto qcc, el primer gr?fico de control
#
# Los par?metros de la funcion qcc son los siguientes:
#
# qcc(data, type="xbar", sizes, center, std.dev, limits,data.name, labels, newdata,
#      newsizes, newlabels, nsigmas = 3, confidence.level, rules = shewhart.rules, 
#      plot = TRUE)
# El gr?fico proporciona adem?s un resumen incluyendo 
# estad?stica descriptiva referida a los grupos,
# tama?o de la submuestra, n? de grupos, media del 
# estad?stico del gr?fico de control, desviaci?n t?pica 
# resultado de dividir el rango medio entre d2 (tabulado)

summary(qcc(Dureza[1:25,], type="R",plot=FALSE))

# Proceso de control continuo: se a?aden las muestras restantes:
qcc(Dureza[c(1:10,12:25),], type="R", newdata=Dureza[26:50,],restore.par=FALSE)


# Grafico x barra:
 
# 1? Con la estimaci?n de la desviaci?n t?pica obtenida ateriormente
# con el gr?fico R, se determinan los l?mites de control naturales 
# con las primeras 24 muestras (es recomendable utilizar al menos 20 
#                      muestras para ello).

qcc(Dureza[c(1:10,12:25),], type="xbar",nsigmas=3,restore.par=FALSE)

# 2? Seguidamente se incluyen las 25 restantes (sin afectar al 
# c?lculo de los l?mites de control), con el objeto de 
# monitorizar de forma continua el proceso.

qcc(Dureza[c(1:10,12:24),], type="xbar", newdata=Dureza[26:50,],nsigmas=3,restore.par=FALSE)

par(op)

# Gr?fico S (desviaciones t?picas)-para variables. 
# Tambi?n podr?amos haber calculado el gr?fico S en lugar
# del de rangos. Para muestras peque?as ses usual usar el R,
# entre otras cosas por su sencillez. Para submuestras
# con tama?os muestrales n > 10, deber?a utilizarse 
# preferiblemente el gr?fico S:

qcc(Dureza[1:25,], type="S")
qcc(Dureza[1:25,], type="S", newdata=Dureza[26:50,])

#---------------------------------------------------------------------------------------#
#### Algunas utilidades de la funci?n qcc
#---------------------------------------------------------------------------------------#


# Diversas maneras de representaci?n de los gr?ficos de control:

q<-qcc(Dureza[1:25,],type="xbar",
       newdata=Dureza[26:50,], plot=FALSE)

# Se pueden mostrar s?lo aquellas muestras que no han sido
# utilizadas para obtener los l?mites naturales de control 
# fijando el par?metro chart.all=FALSE (s?lo muestra de monitorizado).

plot(q, chart.all=FALSE)

# nsigmas es el n?mero de sigmas que se van a usar para construir 
# los l?mites # de control, sumando y restando dicha cantidad al 
# valor central.

qcc(Dureza[1:25,],type="xbar",newdata=Dureza[26:50,], nsigmas=2)

# confidence.level es el nivel de confianza. 
# El par?metro nsigmas queda anulado cuando se define confidence.level
qcc(Dureza[1:25,],type="xbar",newdata=Dureza[26:50,],confidence.level=0.99)


#---------------------------------------------------------------------------------------#
### Si los limites de control se calcularan para una distancia de 1.5 * sigma
# Datos: "pistonrings"
#---------------------------------------------------------------------------------------#

windows(15,10)
#otros 4 gr?ficos
op<-par(mfrow=c(2,2))

# Se obtienen los l?mites naturales de control para el gr?fico R
q=qcc(diameter[1:25,], type="R",nsigmas=1.5,restore.par=FALSE)
summary(q)
# Se elimiminan los puntos fuera de control (1, 3, 11, 14)
qcc(diameter[c(2,4:10,12,13,15:25),], type="R", newdata=diameter[26:40,],nsigmas=1.5
    ,restore.par=FALSE)

# Todavia queda un punto fuera de control, el 25. Se elimina
qcc(diameter[c(2,4:10,12,13,15:24),], type="R", newdata=diameter[26:40,],nsigmas=1.5
    ,restore.par=FALSE)

# Se construye el diagrama para las medias:
qcc(diameter[c(2,4:10,12,13,15:24),], type="xbar", newdata=diameter[26:40,],nsigmas=1.5
    ,restore.par=FALSE)

par(op)

# Todav?a hay dos puntos fuera de control. Los eliminamos:

a=c(2,4:10,12,13,15:24)
qcc(diameter[a[-c(14,16)],], type="xbar", newdata=diameter[26:40,],nsigmas=1.5)

# El proceso est? bajo control; por eso se toman los l?mites 
# naturales obtenidos y se utilizan para controlar el proceso 
# en continuo.
# Al representar las muestras restantes, se observa que varios 
# puntos est?n fuera de control.
# Deber?an identificarse las causas que provocaron esos 
# resultados an?malos, con el fin de corregir las anomal?as y/o 
# identificar cualquier cambio en el proceso (si esto 
# ?ltimo ocurre, habr?a que recalcular los l?mites de control).

detach(pistonrings) # Al principio del c?digo se introdujo un attach para
# poder llamar a las variables que componen pistonrings.
# Es conveniente, aplicar un detach para no confundir variables en adelante




#---------------------------------------------------------------------------------------#
# 1.2. Grafico de control para valores individuales de las variables 
#---------------------------------------------------------------------------------------#

# Ejemplo: tiempos de renderizado

muestra1=rnorm(50,33.52,0.34) # Operador 1
muestra2=rnorm(50,32,0.37) # Operador 2
muestra3=rnorm(10,40,0.5) # Operador 3
muestra=c(muestra1,muestra2,muestra3)

sample <- 1:length(muestra)
datos <- data.frame(muestra,sample)
# datos.qcc <- qcd(datos)

tiempo <- qcc.groups(muestra, sample)

windows(12,7)
qcc(tiempo[1:30], type="xbar.one", newdata=tiempo[31:110],nsigmas=3)


#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#
## 2. Gr?ficos qcc para atributos:  
#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#



#---------------------------------------------------------------------------------------#
## Gr?ficos p 
#---------------------------------------------------------------------------------------#

# Al igual que en el caso anterior, lo mejor para ver c?mo trabajar con qcc, es 
# con un ejemplo.

# Usaremos los datos de orangejuice, sacados tambi?n del MONTGOMERY y que
# estudian el sellado de las juntas de los botes de zumo de naranja concentrado.

# Consta de 54 muestras de tama?o 50 cada una de ellas.
# D es el n?mero de disconformidades
# trial es la prueba (V-F).

# La forma m?s simple para trabajar con los datos es:

data(orangejuice)
attach(orangejuice)
orangejuice

# Se emplean las 30 primeras muestras para el calibrado, para la
# obtenci?n de los l?mites de los graficos de control.

# Hago el diagrama de atributos tipo p (proporci?n de disconformidades) para Trial ==TRUE
windows(15,8)
qcc.atributos <- qcc(D[trial], sizes=size[trial], type="p")

# Se realiza una modificaci?n, ya que encontramos que los puntos 15
# y 23 est?n fuera de los l?mites de control.

# Se pueden eliminar puntos que no me interesan con la funci?n 
# "setdiff":
  
nuevos <- setdiff(which(trial), c(15,23))
nuevos

# Y ahora realizo el control por atributos pero de mis nuevos datos
windows(15,8)
qcc.nuev.atributos <- qcc(D[nuevos], sizes=size[nuevos],type="p")
qcc.nuev.atributos 
# Todav?a hay una submuestra fuera de control
# Aunque ahora es la 20, antes de la primera tanda de eliminaci?n, 
# en la muestra original, era la 21. Se procede a su eliminaci?n:

nuevos2 <- setdiff(which(trial), c(15,21,23)) 
nuevos2
qcc.nuev.atributos <- qcc(D[nuevos2], sizes=size[nuevos2],type="p")

# El proceso esta bajo control: ahora incluyo las dem?s muestras
b=qcc(D[nuevos2], sizes=size[nuevos2], type="p",newdata=D[!trial], 
      newsizes=size[!trial])
summary(b)


#---------------------------------------------------------------------------------------#
## Gr?fico tipo np 
#---------------------------------------------------------------------------------------#

## n?mero de disconformidades a partir de la aprox. norma a la distribuci?n binomial

# Hago el diagrama de atributos tipo np (n? de disconformidades) para Trial ==TRUE
windows(15,8)
qcc.atributos <- qcc(D[trial], sizes=size[trial], type="np")

# Se realiza una modificaci?n, ya que los puntos que se "salen" son el 15 y el 23
# Se pueden quitar puntos que no me interesan con la funci?n "setdiff":

nuevos <- setdiff(which(trial), c(15,23))
nuevos

# y ahora hago el control por atributos pero a partir de mis nuevos datos


qcc.nuev.atributos <- qcc(D[nuevos], sizes=size[nuevos],type="np")
qcc.nuev.atributos # Todav?a hay dos fuera de control

nuevos2 <- setdiff(which(trial), c(15,21,23)) # Aunque ahora es el 20, antes
# de la primera tanda de eliminaci?n era el 21
nuevos2
qcc.nuev.atributos <- qcc(D[nuevos2], sizes=size[nuevos2],type="np")

# Ahora incluyo las dem?s muestras
b=qcc(D[nuevos2], sizes=size[nuevos2], type="np",newdata=D[!trial], newsizes=size[!trial])
summary(b)

detach(orangejuice)


#---------------------------------------------------------------------------------------#
## Gr?ficos C 
#---------------------------------------------------------------------------------------#

############## N? de no conformidades #

# Se cargan los datos:
data(circuit)
attach(circuit)
# Hago el diagrama de atributos tipo c (n? de disconformidades) para Trial ==TRUE
windows(15,8)
qcc.atributos <- qcc(x[trial], sizes=size[circuit$trial], type="c")

# Se pueden quitar puntos que no me interesan con la funci?n "setdiff" (el 6 y el 20):

nuevos <- setdiff(which(trial), c(6,20))
nuevos

#y ahora hago el control por atributos pero de mis nuevos datos


qcc.nuev.atributos <- qcc(x[nuevos], sizes=size[nuevos],type="c",title="Gr?fico c 
                          para el n? de unidades defectuosas por muestra",xlab="muestra",
                          ylab="No conformidades por muestra inspeccionada")

qcc.nuev.atributos <- qcc(x[nuevos], sizes=size[nuevos],newdata=x[!trial],type="c",title="Gr?fico c 
                          para el n? de unidades defectuosas por muestra",xlab="muestra",
                          ylab="No conformidades por muestra inspeccionada")
detach(circuit)

#---------------------------------------------------------------------------------------#
## Gr?ficos U 
#---------------------------------------------------------------------------------------#

############## N? medio de no conformidades por muestra #

# Se cargan los datos:
data(pcmanufact)
attach(pcmanufact)

# Hago el diagrama de atributos tipo c (n? de disconformidades) para Trial ==TRUE
windows(15,8)
qcc.atributos <- qcc(x, sizes=size, type="u",title="Gr?fico 
             u para el n? medio de unidades defectuosas por 
             muestra",xlab="muestra",
                     ylab="N? no conformidades medias por muestra")
detach(pcmanufact)



#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#
# 3. GR?FICOS PARA DETECTAR CAMBIOS PEQUE?OS: MEMORIA-DEPENDENCIA ----------------------#
#---------------------------------------------------------------------------------------#
#---------------------------------------------------------------------------------------#



#---------------------------------------------------------------------------------------#
### 3.1. GR?FICOS CUSUM 
#---------------------------------------------------------------------------------------#


## Se cargan los datos y se agrupan para poder realizar
## el gr?fico de control

data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)

# se.shif: es el valor K que nos da la sensibilidad del gr?fico,
# detectar? cambios, desplazamientos de la media mayores que k veces
# la desviaci?n t?pica estimada
# decision.interval: es el par?metro h, a partir de cual se construyen
# los l?mites de control: H = h?sigma. Suele valer 4 o 5.

windows(15,10)
# 4 paneles en un gr?fico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 1
           ,restore.par=FALSE)
summary(q)

q1 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 4, 
            se.shift = 1,restore.par=FALSE)
q2 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 5, 
            se.shift = 1,restore.par=FALSE)
summary(q2)

plot(q2, chart.all=FALSE,restore.par=FALSE)
par(op)

# Con una mayor sensibilidad, detectando cambios de magnitud 0.6 sigma:

windows(15,10)
# 4 paneles en un gr?fico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 0.6
           ,restore.par=FALSE)

# Elimino un punto, el 14
q1 <- cusum(diameter[c(1:13,15:25),], decision.interval = 4, se.shift = 0.6
            ,restore.par=FALSE)
summary(q1)

q2 <- cusum(diameter[c(1:13,15:25),], newdata=diameter[26:40,], se.shift = 0.6
           , decision.interval = 4,restore.par=FALSE)
summary(q)
plot(q2, chart.all=FALSE,restore.par=FALSE)

par(op)

detach(pistonrings)

#---------------------------------------------------------------------------------------#
# Aplicaci?n del gr?fico de control CUSUM a los datos "Dureza" o "plates":

windows(10,15)

op<-par(mfrow=c(2,1))
# Se suele tomar como buena pr?ctica el asignar el valor de h = 5 cuando se pretende 
# identificar un cambio en la media de una desviaci?n t?pica:
q <- cusum(Dureza[1:25,], decision.interval = 5, se.shift = 1,restore.par=FALSE)
summary(q)
names(q); q$limits

# Para la muestra a monitoriza:
q2 <-  cusum(Dureza[1:25,], decision.interval = 5, se.shift = 1, newdata=Dureza[26:50,], 
            restore.par=FALSE) 
summary(q2)

par(op)

# En este caso, el gr?fico de control de la media detecta antes el cambio del proceso.
# Es un cambio grande. El gr?fico CUSUM detecta mejor los cambios peque?os.
# Cambios inferiores 2*sigma: los detectan mejor los gr?ficos CUSUM y EWMA
# Cambios superiores a 2*sigma: los detectan mejor los gr?ficos de la media y rango.


# Alternativamente se podr?a haber utilizado la librer?a qcr:
library(qcr)

res.qcd <- qcd(plates, type.data = "dependence")
res.qcs <- qcs.cusum(res.qcd, type = "cusum")
plot(res.qcs)




#---------------------------------------------------------------------------------------#
### 3.2. GR?FICOS EWMA 
#---------------------------------------------------------------------------------------#



data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)

windows(15,8)
# 4 paneles en un gr?fico:
op<-par(mfrow=c(1,2))
# Se suele tomar como buena pr?ctica el asignar el valor de 0.2 al parametro lambda
q <- ewma(diameter[1:25,], lambda=0.2, nsigmas=3,restore.par=FALSE)
summary(q)
names(q); q$limits

# Para la muestra a monitorizar se emplean unos l?mites ligeramente m?s exigentes
q2 <-  ewma(diameter[1:25,], lambda=0.2, nsigmas=3, newdata=diameter[26:40,], 
            plot = FALSE,restore.par=FALSE) 
summary(q2)
plot(q2)

par(op)

detach(pistonrings)

names(q2)
q2$limits
##
## En el caso de observaciones individuales:
##
x <- c(33.75, 33.05, 34, 33.81, 33.46, 34.02, 33.68, 33.27, 33.49, 33.20,
       33.62, 33.00, 33.54, 33.12, 33.84) # viscosity data (Montgomery, pag. 242)
q <-  ewma(x, lambda=0.2, nsigmas=2.7)
summary(q)

#---------------------------------------------------------------------------------------#
# Aplicaci?n del gr?fico de control EWMA a los datos "Dureza" o "plates":

windows(10,15)
# 4 paneles en un gr?fico:
op<-par(mfrow=c(2,1))
# Se suele tomar como buena pr?ctica el asignar el valor de 0.2 al parametro lambda
q <- ewma(Dureza[1:25,], lambda=0.2, nsigmas=3,restore.par=FALSE)
summary(q)
names(q); q$limits

# Para la muestra a monitorizar se emplean unos l?mites ligeramente m?s exigentes
q2 <-  ewma(Dureza[1:25,], lambda=0.25, nsigmas=3, newdata=Dureza[26:50,], 
            restore.par=FALSE) 
summary(q2)

par(op)

# En este caso, el gr?fico de control de la media detecta antes el cambio del proceso.
# Es un cambio grande. El gr?fico EWMA detecta mejor los cambios peque?os.
# Cambios inferiores 2*sigma: los detectan mejor los gr?ficos CUSUM y EWMA
# Cambios superiores a 2*sigma: los detectan mejor los gr?ficos de la media y rango.


# Alternativamente se podr?a haber utilizado la librer?a qcr:
library(qcr)

res.qcd <- qcd(plates, type.data = "dependence")
res.qcs <- qcs.ewma(res.qcd, type = "ewma")
plot(res.qcs)
