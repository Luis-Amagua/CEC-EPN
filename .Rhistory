detach(pcmanufact)
library(qcc)
data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)
library(qcc)
data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter,sample)
names(data("pistonrings"))
library(qcc)
data(pistonrings)
names(data("pistonrings"))
attach(pistonrings)
diameter <- qcc.groups(diameter,sample)
names(data("pistonrings"))
diameter <- qcc.groups(diameter,sample)
data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)
data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)
windows(15,8)
# 4 paneles en un gráfico:
op<-par(mfrow=c(1,2))
# Se suele tomar como buena práctica el asignar el valor de 0.2 al parametro lambda
q <- ewma(diameter[1:25,], lambda=0.2, nsigmas=3,restore.par=FALSE)
summary(q)
names(q); q$limits
# Para la muestra a monitorizar se emplean unos límites ligeramente más exigentes
q2 <-  ewma(diameter[1:25,], lambda=0.2, nsigmas=3, newdata=diameter[26:40,],
plot = FALSE,restore.par=FALSE)
summary(q2)
plot(q2)
par(op)
detach(pistonrings)
names(q2)
q2$limits
##
## En el caso de observaciones individuales:
##
x <- c(33.75, 33.05, 34, 33.81, 33.46, 34.02, 33.68, 33.27, 33.49, 33.20,
33.62, 33.00, 33.54, 33.12, 33.84) # viscosity data (Montgomery, pag. 242)
q <-  ewma(x, lambda=0.2, nsigmas=2.7)
summary(q)
data(pistonrings)
attach(pistonrings)
diameter <- qcc.groups(diameter, sample)
windows(15,8)
# 4 paneles en un gráfico:
op<-par(mfrow=c(1,2))
# Se suele tomar como buena práctica el asignar el valor de 0.2 al parametro lambda
q <- ewma(diameter[1:25,], lambda=0.2, nsigmas=3,restore.par=FALSE)
summary(q)
names(q); q$limits
# Para la muestra a monitorizar se emplean unos límites ligeramente más exigentes
q2 <-  ewma(diameter[1:25,], lambda=0.2, nsigmas=3, newdata=diameter[26:40,],
plot = FALSE,restore.par=FALSE)
summary(q2)
plot(q2)
par(op)
detach(pistonrings)
names(q2)
q2$limits
##
## En el caso de observaciones individuales:
##
x <- c(33.75, 33.05, 34, 33.81, 33.46, 34.02, 33.68, 33.27, 33.49, 33.20,
33.62, 33.00, 33.54, 33.12, 33.84) # viscosity data (Montgomery, pag. 242)
q <-  ewma(x, lambda=0.2, nsigmas=2.7)
summary(q)
#---------------------------------------------------------------------------------------#
# Aplicación del gráfico de control EWMA a los datos "Dureza" o "plates":
windows(10,15)
# 4 paneles en un gráfico:
op<-par(mfrow=c(2,1))
# Se suele tomar como buena práctica el asignar el valor de 0.2 al parametro lambda
q <- ewma(Dureza[1:25,], lambda=0.2, nsigmas=3,restore.par=FALSE)
.libPaths("D:/library r")
install.packages("qcc")
install.packages(qcr)
install.packages("qcr")
library(qcc)
data(pistonrings) # Se carga la base de datos
pistonrings
attach(pistonrings) # Se toman las columnas de la base de datos como variables
dim(pistonrings) # 200 datos, 3 variables
# Creacion del objeto qcc.groups o grupos qcc:
diameter <- qcc.groups(diameter, sample)
# Se agrupan los valores de los di?metros seg?n el valor de la columna "Sample"
# Como hay 200 valores en 40 muestras, el resultado es una matriz 40x5 (200/5=40)
diameter
dim(diameter)
# se.shif: es el valor K que nos da la sensibilidad del gráfico,
# detectará cambios, desplazamientos de la media mayores que k veces
# la desviación típica estimada
# decision.interval: es el parámetro h, a partir de cual se construyen
# los límites de control: H = h·sigma. Suele valer 4 o 5.
windows(15,10)
# 4 paneles en un gráfico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 1
,restore.par=FALSE)
summary(q)
q1 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 4,
se.shift = 1,restore.par=FALSE)
q2 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 5,
se.shift = 1,restore.par=FALSE)
summary(q2)
plot(q2, chart.all=FALSE,restore.par=FALSE)
par(op)
# Con una mayor sensibilidad, detectando cambios de magnitud 0.6 sigma:
windows(15,10)
# 4 paneles en un gráfico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 0.6
,restore.par=FALSE)
# Elimino un punto, el 14
q1 <- cusum(diameter[c(1:13,15:25),], decision.interval = 4, se.shift = 0.6
,restore.par=FALSE)
summary(q1)
q2 <- cusum(diameter[c(1:13,15:25),], newdata=diameter[26:40,], se.shift = 0.6
, decision.interval = 4,restore.par=FALSE)
summary(q)
plot(q2, chart.all=FALSE,restore.par=FALSE)
par(op)
detach(pistonrings)
library(qcc)
data(pistonrings) # Se carga la base de datos
pistonrings
attach(pistonrings) # Se toman las columnas de la base de datos como variables
dim(pistonrings) # 200 datos, 3 variables
# Creacion del objeto qcc.groups o grupos qcc:
diameter <- qcc.groups(diameter, sample)
# Se agrupan los valores de los di?metros seg?n el valor de la columna "Sample"
# Como hay 200 valores en 40 muestras, el resultado es una matriz 40x5 (200/5=40)
diameter
dim(diameter)
# se.shif: es el valor K que nos da la sensibilidad del gráfico,
# detectará cambios, desplazamientos de la media mayores que k veces
# la desviación típica estimada
# decision.interval: es el parámetro h, a partir de cual se construyen
# los límites de control: H = h·sigma. Suele valer 4 o 5.
windows(15,10)
# 4 paneles en un gráfico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 1
,restore.par=FALSE)
summary(q)
q1 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 4,
se.shift = 1,restore.par=FALSE)
q2 <- cusum(diameter[1:25,], newdata=diameter[26:40,], decision.interval = 5,
se.shift = 1,restore.par=FALSE)
summary(q2)
plot(q2, chart.all=FALSE,restore.par=FALSE)
par(op)
# Con una mayor sensibilidad, detectando cambios de magnitud 0.6 sigma:
windows(15,10)
# 4 paneles en un gráfico:
op<-par(mfrow=c(2,2))
q <- cusum(diameter[1:25,], decision.interval = 4, se.shift = 0.6
,restore.par=FALSE)
# Elimino un punto, el 14
q1 <- cusum(diameter[c(1:13,15:25),], decision.interval = 4, se.shift = 0.6
,restore.par=FALSE)
summary(q1)
q2 <- cusum(diameter[c(1:13,15:25),], newdata=diameter[26:40,], se.shift = 0.6
, decision.interval = 4,restore.par=FALSE)
summary(q)
plot(q2, chart.all=FALSE,restore.par=FALSE)
par(op)
detach(pistonrings)
install.packages("Matching")
install.packages("ILS")
.libPaths("D:/library r")
install.packages("Matching")
install.packages(c("car", "ILS", "qualityTools"))
library(Matching)
.libPaths("D:/library r")
rmarkdown::render()
rmarkdown::render('pdf_document')
.libPaths("D:/library r")
.libPaths("D:/library r")
.libPaths("D:/library r")
.libPaths("D:/library r")
.libPaths("D:/library r")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9),
rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
View(Programa)
AnovaModel.2 <- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.2)
AnovaModel.2 <- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.2)
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9),
rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.2 <- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.2)
View(Programa)
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.2 <- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.2)
Hosteleria=data.frame(cbind(         c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),         c(rep("B1",3),rep("B2",3),rep("B3",3),           rep("B1",3),rep("B2",3),rep("B3",3)),         c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
AnovaModel.3 <- (lm(Salario ~ Procedencia*SituacionLabor, data = Hosteleria))
anova(AnovaModel.3)
Anova(AnovaModel.3)
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.2)
summary(AnovaModel)
AnovaModel<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel)
View(AnovaModel.3)
View(AnovaModel.2)
View(AnovaModel.3)
View(AnovaModel)
library(SixSigma)
library(qcc)
library(qualityTools)
library(knitr)
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel)
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
install.packages("RcmdrMisc")
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
library("RcmdrMisc")
library("RcmdrMisc")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
install.packages("car")
install.packages("car")
library("RcmdrMisc")
library("car")
library("carData")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
library("RcmdrMisc")
library("car")
library("carData")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
View(AnovaModel.1)
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
Pairs <- glht(AnovaModel.1, linfct=mcp(Programa="Turkey"))
install.packages("multcomp")
library("multcomp")
install.packages("mvtnorm")
install.packages("mvtnorm")
library("multcomp")
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
Pairs <- glht(AnovaModel.1, linfct=mcp(Programa="Turkey"))
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
Pairs <- glht(AnovaModel.1, linfct=mcp(Programa="Turkey"))
Pairs <- glht(AnovaModel.1, linfct=mcp(Programa="Tukey"))
summary(Paris)
summary(Pairs)
install.packages("summary")
summary(AnovaModel.1)
install.packages("summariser")
summary(AnovaModel.1)
install.packages("summarytools")
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
Hosteleria=data.frame(cbind(         c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),         c(rep("B1",3),rep("B2",3),rep("B3",3),           rep("B1",3),rep("B2",3),rep("B3",3)),         c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
View(Hosteleria)
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
anova(AnovaModel.3)
Anova(AnovaModel.3)
tapply(Hosteleria$Salario, list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), mean, na.rm=TRUE)
tapply(Hosteleria$Salario,
list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor),
sd, na.rm=TRUE)
tapply(Hosteleria$Salario,
list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor),
function(x) sum(!na.rm(x)))
View(Hosteleria)
Hosteleria=data.frame(cbind(c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),
c(rep("B1",3),rep("B2",3),rep("B3",3),
rep("B1",3),rep("B2",3),rep("B3",3)),
c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
Anova(AnovaModel.3)
Anova.lm(AnovaModel.3)
Anova(AnovaModel.3)
anova(AnovaModel.3)
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
View(AnovaModel.3)
anova(AnovaModel.3)
Anova(AnovaModel.3)
tapply(Hosteleria$Salario,
list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor),
mean, na.rm=TRUE)
tapply(Hosteleria$Salario,
list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor),
sd, na.rm=TRUE)
tapply(Hosteleria$Salario,
list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor),
function(x) sum(!na.rm(x)))
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
library("Rsolnp")
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
```{r include=false}
Summary(AnovaModel.1)
summary(AnovaModel.1)
# Cochran and Cox (1957, p.164)
# 3x3 factorial with ordered factors, each is average of 12.
CC <- data.frame(
y = c(449, 413, 326, 409, 358, 291, 341, 278, 312)/12,
P = ordered(gl(3, 3)), N = ordered(gl(3, 1, 9))
)
CC.aov <- aov(y ~ N * P, data = CC , weights = rep(12, 9))
summary(CC.aov)
# Split both main effects into linear and quadratic parts.
summary(CC.aov, split = list(N = list(L = 1, Q = 2),
P = list(L = 1, Q = 2)))
# Split only the interaction
summary(CC.aov, split = list("N:P" = list(L.L = 1, Q = 2:4)))
# split on just one var
summary(CC.aov, split = list(P = list(lin = 1, quad = 2)))
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
summary(CC.aov, split = list(P = list(lin = 1, quad = 2)),
expand.split = FALSE)
# Cochran and Cox (1957, p.164)
# 3x3 factorial with ordered factors, each is average of 12.
CC <- data.frame(
y = c(449, 413, 326, 409, 358, 291, 341, 278, 312)/12,
P = ordered(gl(3, 3)), N = ordered(gl(3, 1, 9))
)
View(CC)
CC.aov <- aov(y ~ N * P, data = CC , weights = rep(12, 9))
summary(CC.aov)
View(CC.aov)
View(CC.aov)
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa,data = Programa)
summary(AnovaModel.1)
AnovaModel.1<- aov(Puntuacion ~ Programa, data = Programa)
View(AnovaModel.1)
CC.aov <-aov(y ~ N * P, data = CC , weights = rep(12, 9))
Hosteleria=data.frame(cbind(c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),
c(rep("B1",3),rep("B2",3),rep("B3",3),
rep("B1",3),rep("B2",3),rep("B3",3)),
c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
Anova(AnovaModel.3)
```{r include=FALSE}
Hosteleria=data.frame(cbind(c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),
c(rep("B1",3),rep("B2",3),rep("B3",3),
rep("B1",3),rep("B2",3),rep("B3",3)),
c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
Anova(AnovaModel.3)
Hosteleria=data.frame(cbind(c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9),
c(rep("B1",3),rep("B2",3),rep("B3",3),
rep("B1",3),rep("B2",3),rep("B3",3)),
c(rep("A1",9),rep("A2",9)) ))
colnames(Hosteleria)=c("Salario","Procedencia", "SituacionLabor")
AnovaModel.3 <- (lm(Salario~ Procedencia*SituacionLabor,data = Hosteleria))
Anova(AnovaModel.3)
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa, data = Programa)
library("RcmdrMisc")
library("car")
library("carData")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa, data = Programa)
summary(AnovaModel.1)
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
Pairs <- glht(AnovaModel.1, linfct=mcp(Programa="Tukey"))
summary(Pairs)
library("RcmdrMisc")
library("multcomp")
library("SixSigma")
library("qcc")
library("qualityTools")
library("Rsolnp")
Programa=data.frame(cbind(c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
,c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))))
colnames(Programa)=c("Puntuacion", "Programa")
AnovaModel.1<- aov(Puntuacion ~ Programa, data = Programa)
summary(AnovaModel.1)
View(AnovaModel.1)
.libPaths("D:/library r")
.libPaths("D:/library r")
puntuacion<-c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
programas<-c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))
Programa <- data.frame(puntuacion = puntuacion, program = program)
Programa <- data.frame(puntuacion = puntuacion, programas = programas)
Programa
view(Programa)
View(Programa)
AnovaModel.1<- aov(Puntuacion ~ programas, data = Programa)
Programa <- data.frame(Puntuacion = Puntuacion, Programas = Programas)
Puntuacion<-c(85,72,83,80,76,78,80,84,81,78,82,86,90,88,85,82,80,85,
90,88,94,92,89,87,91)
Programas<-c(rep("PROGRAMA1",6),rep("PROGRAMA2",9), rep("PROGRAMA3",10))
Programa <- data.frame(Puntuacion = Puntuacion, Programas = Programas)
AnovaModel.1<- aov(Puntuacion ~ programas, data = Programa)
summary(AnovaModel.1)
numSummary(Programa$Puntuacion,groups=Programa$Programa,statistics=c("mean","sd"))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(!na.rm(x)))
Hosteleria <- data.frame(Salario = Salario, Procedencia = Procedencia, SituacionLabor=SituacionLabor)
Salario<-c(1,2,3,2,3,2,3,3,4,6,6,7,7,7,8,8,10,9)
Procedencia<-c(rep("B1",3),rep("B2",3),rep("B3",3),
rep("B1",3),rep("B2",3),rep("B3",3))
SituacionLabor<-c(rep("A1",9),rep("A2",9))
Hosteleria <- data.frame(Salario = Salario, Procedencia = Procedencia, SituacionLabor=SituacionLabor)
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(!na.rm(x)))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(na.rm(x)))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(na.rm(x)=TRUE))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(na.rm(x)==TRUE))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(!na.rm(x)))
tapply(Hosteleria$Salario,list(Procedencia=Hosteleria$Procedencia,SituacionLabor=Hosteleria$SituacionLabor), function(x) sum(!is.na(x)))
.libPaths("D:/library r")
.libPaths("D:/library r")
.libPaths("D:/library r")
.libPaths("D:/library r")
